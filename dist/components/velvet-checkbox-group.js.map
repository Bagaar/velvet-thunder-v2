{"version":3,"file":"velvet-checkbox-group.js","sources":["../../src/components/velvet-checkbox-group.hbs","../../src/components/velvet-checkbox-group.ts"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"<div\\n  class={{-velvet/class-list\\n    \\\"velvet-checkbox-group\\\"\\n    (concat \\\"velvet-checkbox-group-\\\" (or @size \\\"md\\\"))\\n    (if @isDisabled \\\"velvet-checkbox-group-disabled\\\")\\n  }}\\n  role=\\\"group\\\"\\n  ...attributes\\n>\\n  {{yield\\n    (hash\\n      Checkbox=(component\\n        (ensure-safe-component this.VelvetCheckbox)\\n        isDisabled=@isDisabled\\n        size=@size\\n        privateGroupValue=@value\\n        privateGroupValueIsObject=@valueIsObject\\n        privateInGroup=true\\n        privateOnChangeGroup=@onChange\\n      )\\n    )\\n  }}\\n</div>\")","import { guidFor } from \"@ember/object/internals\";\nimport Component from \"@glimmer/component\";\nimport type { WithBoundArgs } from \"@glint/template\";\nimport VelvetCheckbox, { type Size } from \"./velvet-checkbox.ts\";\n\nexport type ValueAsArray = string[];\nexport type ValueAsObject = { [name: string]: boolean };\nexport type Value = ValueAsArray | ValueAsObject;\n\ninterface VelvetCheckboxGroupSignature {\n  Args: {\n    /// Indicate if the checkbox group is disabled.\n    /// @default [false]\n    isDisabled?: boolean;\n    /// Handle the checkbox group's `change` event.\n    /// @default [undefined]\n    onChange?: (value: Value, event: Event) => void;\n    /// The size of the checkboxes.\n    /// @default [\"md\"]\n    size?: Size;\n    /// The value of the checkbox group.\n    /// @default [undefined]\n    value?: Value;\n    /// Indicate if `@value` is an `Object` instead of an `Array`.\n    /// @default [false]\n    valueIsObject?: boolean;\n  };\n  Blocks: {\n    default: [\n      {\n        Checkbox: WithBoundArgs<\n          typeof VelvetCheckbox,\n          | \"isDisabled\"\n          | \"size\"\n          | \"privateGroupValue\"\n          | \"privateGroupValueIsObject\"\n          | \"privateInGroup\"\n          | \"privateOnChangeGroup\"\n        >;\n      }\n    ];\n  };\n  Element: HTMLDivElement;\n}\n\nexport default class VelvetCheckboxGroup extends Component<VelvetCheckboxGroupSignature> {\n  uniqueName = guidFor(this);\n  VelvetCheckbox = VelvetCheckbox;\n}\n"],"names":["VelvetCheckboxGroup","Component","constructor","args","_defineProperty","guidFor","VelvetCheckbox","setComponentTemplate","TEMPLATE"],"mappings":";;;;;;;AACA,eAAe,kBAAkB,CAAC,ojBAAojB;;AC4CvkB,MAAMA,mBAAmB,SAASC,SAAS,CAA+B;AAAAC,EAAAA,WAAAA,CAAA,GAAAC,IAAA,EAAA;AAAA,IAAA,KAAA,CAAA,GAAAA,IAAA,CAAA,CAAA;AAAAC,IAAAA,eAAA,CAC1EC,IAAAA,EAAAA,YAAAA,EAAAA,OAAO,CAAC,IAAI,CAAC,CAAA,CAAA;AAAAD,IAAAA,eAAA,yBACTE,cAAc,CAAA,CAAA;AAAA,GAAA;AACjC,CAAA;AAACC,oBAAA,CAAAC,QAAA,EAHoBR,mBAAmB,CAAA;;;;"}